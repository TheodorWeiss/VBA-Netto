Option Explicit

' === НАСТРОЙКИ ===
Const CITY_PONHOLZ As String = "Ponholz"
Const CITY_ERFURT  As String = "Erfurt"
Const COL_A As Long = 1       ' параметр (Knüller 1 / Samstagkracher / …)
Const COL_B As Long = 2       ' артикула (через запятую)

Public Sub BoldArticles_BelowErfurt_ParamAware_Final()
    Dim ws As Worksheet: Set ws = ActiveSheet
    
    Dim rPonholz As Long, rErfurt As Long, lastRow As Long
    rPonholz = FindRow(ws, CITY_PONHOLZ, COL_A)
    If rPonholz = 0 Then MsgBox "Не найден '" & CITY_PONHOLZ & "'.", vbExclamation: Exit Sub
    
    rErfurt = FindRowAfter(ws, CITY_ERFURT, COL_A, rPonholz + 1)
    If rErfurt = 0 Then MsgBox "Не найден '" & CITY_ERFURT & "' ниже '" & CITY_PONHOLZ & "'.", vbExclamation: Exit Sub
    
    lastRow = ws.Cells(ws.Rows.Count, COL_A).End(xlUp).Row
    
    ' ===== 1) Справочник параметр → артикула из Ponholz =====
    Dim dictParam As Object: Set dictParam = CreateObject("Scripting.Dictionary")
    dictParam.CompareMode = vbTextCompare
    
    Dim r As Long, paramName As String, txt As String
    Dim arr() As String, i As Long, tok As String
    
    For r = rPonholz + 1 To rErfurt - 1
        paramName = CleanParam(CStr(ws.Cells(r, COL_A).Value))
        If Len(paramName) = 0 Then GoTo NextR1
        
        txt = Trim$(CStr(ws.Cells(r, COL_B).Value))
        If Len(txt) = 0 Then GoTo NextR1
        
        arr = SplitArticles(txt)
        If Not dictParam.Exists(paramName) Then
            Set dictParam(paramName) = CreateObject("Scripting.Dictionary")
            dictParam(paramName).CompareMode = vbTextCompare
        End If
        
        For i = LBound(arr) To UBound(arr)
            tok = arr(i)
            If Len(tok) > 0 Then dictParam(paramName)(tok) = True
        Next i
NextR1:
    Next r
    
    If dictParam.Count = 0 Then
        MsgBox "В блоке '" & CITY_PONHOLZ & "' не найдено артикулов.", vbInformation: Exit Sub
    End If
    
    Application.ScreenUpdating = False
    
    ' ===== 2) Очистка жирного шрифта ниже Erfurt (только в колонке B) =====
    ws.Range(ws.Cells(rErfurt + 1, COL_B), ws.Cells(lastRow, COL_B)).Font.Bold = False
    
    ' ===== 3) Подсветка совпадений ниже Erfurt =====
    For r = rErfurt + 1 To lastRow
        ' Пропускаем строки-городá (они жирные и с серым фоном)
        If IsCityRow(ws.Cells(r, COL_A)) Then GoTo NextR2
        
        paramName = CleanParam(CStr(ws.Cells(r, COL_A).Value))
        If Len(paramName) = 0 Then GoTo NextR2
        If Not dictParam.Exists(paramName) Then GoTo NextR2
        
        txt = CStr(ws.Cells(r, COL_B).Value)
        If Len(txt) = 0 Then GoTo NextR2
        
        BoldTokensFromSet ws.Cells(r, COL_B), txt, dictParam(paramName)
NextR2:
    Next r
    
    Application.ScreenUpdating = True
    MsgBox "Готово: совпадающие артикула из Ponholz подсвечены ниже Erfurt (по параметрам).", vbInformation
End Sub

' ---------- ВСПОМОГАТЕЛЬНЫЕ ----------

Private Function FindRow(ws As Worksheet, ByVal key As String, ByVal col As Long) As Long
    Dim lastRow As Long: lastRow = ws.Cells(ws.Rows.Count, col).End(xlUp).Row
    Dim r As Long
    For r = 1 To lastRow
        If StrComp(Trim$(CStr(ws.Cells(r, col).Value)), key, vbTextCompare) = 0 Then
            FindRow = r: Exit Function
        End If
    Next r
    FindRow = 0
End Function

Private Function FindRowAfter(ws As Worksheet, ByVal key As String, ByVal col As Long, ByVal startAt As Long) As Long
    Dim lastRow As Long: lastRow = ws.Cells(ws.Rows.Count, col).End(xlUp).Row
    Dim r As Long
    For r = startAt To lastRow
        If StrComp(Trim$(CStr(ws.Cells(r, col).Value)), key, vbTextCompare) = 0 Then
            FindRowAfter = r: Exit Function
        End If
    Next r
    FindRowAfter = 0
End Function

Private Function CleanParam(ByVal s As String) As String
    Dim t As String: t = Trim$(s)
    Do While InStr(t, "  ") > 0: t = Replace(t, "  ", " "): Loop
    CleanParam = t
End Function

Private Function SplitArticles(ByVal s As String) As String()
    Dim tmp As String
    tmp = Replace(Replace(Replace(Trim$(s), ";", ","), " ", ","), "  ", ",")
    Do While InStr(tmp, ",,") > 0: tmp = Replace(tmp, ",,", ","): Loop
    
    Dim raw() As String: raw = Split(tmp, ",")
    Dim col As New Collection
    Dim i As Long, t As String
    On Error Resume Next
    For i = LBound(raw) To UBound(raw)
        t = Trim$(raw(i))
        If Len(t) > 0 Then col.Add t, t
    Next i
    On Error GoTo 0
    
    If col.Count = 0 Then ReDim SplitArticles(-1 To -1): Exit Function
    ReDim SplitArticles(0 To col.Count - 1)
    For i = 1 To col.Count: SplitArticles(i - 1) = CStr(col(i)): Next i
End Function

Private Sub BoldTokensFromSet(ByVal tgt As Range, ByVal cellText As String, ByVal dictSet As Object)
    Dim token As Variant, pos As Long, fromPos As Long
    For Each token In dictSet.Keys
        fromPos = 1
        Do
            pos = InStr(fromPos, cellText, CStr(token), vbTextCompare)
            If pos = 0 Then Exit Do
            If IsWholeToken(cellText, CStr(token), pos) Then
                tgt.Characters(Start:=pos, Length:=Len(CStr(token))).Font.Bold = True
            End If
            fromPos = pos + Len(CStr(token))
        Loop
    Next token
End Sub

Private Function IsWholeToken(ByVal s As String, ByVal token As String, ByVal pos As Long) As Boolean
    Dim leftOK As Boolean, rightOK As Boolean
    Dim endPos As Long: endPos = pos + Len(token) - 1
    
    If pos = 1 Then leftOK = True Else leftOK = (InStr(",; /", Mid$(s, pos - 1, 1)) > 0)
    If endPos >= Len(s) Then rightOK = True Else rightOK = (InStr(",; /", Mid$(s, endPos + 1, 1)) > 0)
    
    IsWholeToken = (leftOK And rightOK)
End Function

' Проверяем, является ли строка "городом"
Private Function IsCityRow(cell As Range) As Boolean
    On Error Resume Next
    IsCityRow = (cell.Font.Bold = True And cell.Interior.Color <> vbWhite)
    On Error GoTo 0
End Function
