Option Explicit

Public Sub ShadeByFirstWord()
    Const SHEET_NAME As String = "Werbung_Reordered"
    Const START_ROW As Long = 3        ' первая строка для заливки
    Const FIRST_COL As Long = 1        ' A
    Const LAST_COL As Long = 9         ' I
    Const GRAY_INDEX As Long = 15      ' стандартный светло-серый (ColorIndex)

    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets(SHEET_NAME)

    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual

    Dim lastRow As Long
    lastRow = ws.Cells(ws.Rows.Count, "B").End(xlUp).Row
    If lastRow < START_ROW Then GoTo TidyExit

    ' 1) Закрасить строку 3
    ws.Range(ws.Cells(START_ROW, FIRST_COL), ws.Cells(START_ROW, LAST_COL)).Interior.ColorIndex = GRAY_INDEX

    ' 2) Идём дальше: красим, когда меняется первое слово в B
    Dim r As Long
    Dim prevFirst As String, curFirst As String

    prevFirst = FirstWord(CStr(ws.Cells(START_ROW, "B").Value))

    For r = START_ROW + 1 To lastRow
        curFirst = FirstWord(CStr(ws.Cells(r, "B").Value))
        If StrComp(curFirst, prevFirst, vbTextCompare) <> 0 Then
            ws.Range(ws.Cells(r, FIRST_COL), ws.Cells(r, LAST_COL)).Interior.ColorIndex = GRAY_INDEX
        End If
        prevFirst = curFirst
    Next r

TidyExit:
    Application.Calculation = xlCalculationAutomatic
    Application.ScreenUpdating = True
End Sub

Private Function FirstWord(ByVal s As String) As String
    ' Возвращает первое слово (до первого пробела) из строки s
    s = Trim$(s)
    If Len(s) = 0 Then
        FirstWord = ""
    Else
        FirstWord = Split(s, " ")(0)
    End If
End Function
